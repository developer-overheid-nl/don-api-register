/*
Developer Overheid API

API for retrieveing all the API's and repositories on Developer Overheid

API version: dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package don_api_register

import (
	"encoding/json"
)

// checks if the APIListItemTermsOfUse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIListItemTermsOfUse{}

// APIListItemTermsOfUse struct for APIListItemTermsOfUse
type APIListItemTermsOfUse struct {
	GovernmentOnly *bool `json:"government_only,omitempty"`
	PayPerUse *bool `json:"pay_per_use,omitempty"`
	UptimeGuarantee *float32 `json:"uptime_guarantee,omitempty"`
	SupportResponseTime *int32 `json:"support_response_time,omitempty"`
}

// NewAPIListItemTermsOfUse instantiates a new APIListItemTermsOfUse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIListItemTermsOfUse() *APIListItemTermsOfUse {
	this := APIListItemTermsOfUse{}
	return &this
}

// NewAPIListItemTermsOfUseWithDefaults instantiates a new APIListItemTermsOfUse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIListItemTermsOfUseWithDefaults() *APIListItemTermsOfUse {
	this := APIListItemTermsOfUse{}
	return &this
}

// GetGovernmentOnly returns the GovernmentOnly field value if set, zero value otherwise.
func (o *APIListItemTermsOfUse) GetGovernmentOnly() bool {
	if o == nil || IsNil(o.GovernmentOnly) {
		var ret bool
		return ret
	}
	return *o.GovernmentOnly
}

// GetGovernmentOnlyOk returns a tuple with the GovernmentOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemTermsOfUse) GetGovernmentOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.GovernmentOnly) {
		return nil, false
	}
	return o.GovernmentOnly, true
}

// HasGovernmentOnly returns a boolean if a field has been set.
func (o *APIListItemTermsOfUse) HasGovernmentOnly() bool {
	if o != nil && !IsNil(o.GovernmentOnly) {
		return true
	}

	return false
}

// SetGovernmentOnly gets a reference to the given bool and assigns it to the GovernmentOnly field.
func (o *APIListItemTermsOfUse) SetGovernmentOnly(v bool) {
	o.GovernmentOnly = &v
}

// GetPayPerUse returns the PayPerUse field value if set, zero value otherwise.
func (o *APIListItemTermsOfUse) GetPayPerUse() bool {
	if o == nil || IsNil(o.PayPerUse) {
		var ret bool
		return ret
	}
	return *o.PayPerUse
}

// GetPayPerUseOk returns a tuple with the PayPerUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemTermsOfUse) GetPayPerUseOk() (*bool, bool) {
	if o == nil || IsNil(o.PayPerUse) {
		return nil, false
	}
	return o.PayPerUse, true
}

// HasPayPerUse returns a boolean if a field has been set.
func (o *APIListItemTermsOfUse) HasPayPerUse() bool {
	if o != nil && !IsNil(o.PayPerUse) {
		return true
	}

	return false
}

// SetPayPerUse gets a reference to the given bool and assigns it to the PayPerUse field.
func (o *APIListItemTermsOfUse) SetPayPerUse(v bool) {
	o.PayPerUse = &v
}

// GetUptimeGuarantee returns the UptimeGuarantee field value if set, zero value otherwise.
func (o *APIListItemTermsOfUse) GetUptimeGuarantee() float32 {
	if o == nil || IsNil(o.UptimeGuarantee) {
		var ret float32
		return ret
	}
	return *o.UptimeGuarantee
}

// GetUptimeGuaranteeOk returns a tuple with the UptimeGuarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemTermsOfUse) GetUptimeGuaranteeOk() (*float32, bool) {
	if o == nil || IsNil(o.UptimeGuarantee) {
		return nil, false
	}
	return o.UptimeGuarantee, true
}

// HasUptimeGuarantee returns a boolean if a field has been set.
func (o *APIListItemTermsOfUse) HasUptimeGuarantee() bool {
	if o != nil && !IsNil(o.UptimeGuarantee) {
		return true
	}

	return false
}

// SetUptimeGuarantee gets a reference to the given float32 and assigns it to the UptimeGuarantee field.
func (o *APIListItemTermsOfUse) SetUptimeGuarantee(v float32) {
	o.UptimeGuarantee = &v
}

// GetSupportResponseTime returns the SupportResponseTime field value if set, zero value otherwise.
func (o *APIListItemTermsOfUse) GetSupportResponseTime() int32 {
	if o == nil || IsNil(o.SupportResponseTime) {
		var ret int32
		return ret
	}
	return *o.SupportResponseTime
}

// GetSupportResponseTimeOk returns a tuple with the SupportResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemTermsOfUse) GetSupportResponseTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SupportResponseTime) {
		return nil, false
	}
	return o.SupportResponseTime, true
}

// HasSupportResponseTime returns a boolean if a field has been set.
func (o *APIListItemTermsOfUse) HasSupportResponseTime() bool {
	if o != nil && !IsNil(o.SupportResponseTime) {
		return true
	}

	return false
}

// SetSupportResponseTime gets a reference to the given int32 and assigns it to the SupportResponseTime field.
func (o *APIListItemTermsOfUse) SetSupportResponseTime(v int32) {
	o.SupportResponseTime = &v
}

func (o APIListItemTermsOfUse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIListItemTermsOfUse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GovernmentOnly) {
		toSerialize["government_only"] = o.GovernmentOnly
	}
	if !IsNil(o.PayPerUse) {
		toSerialize["pay_per_use"] = o.PayPerUse
	}
	if !IsNil(o.UptimeGuarantee) {
		toSerialize["uptime_guarantee"] = o.UptimeGuarantee
	}
	if !IsNil(o.SupportResponseTime) {
		toSerialize["support_response_time"] = o.SupportResponseTime
	}
	return toSerialize, nil
}

type NullableAPIListItemTermsOfUse struct {
	value *APIListItemTermsOfUse
	isSet bool
}

func (v NullableAPIListItemTermsOfUse) Get() *APIListItemTermsOfUse {
	return v.value
}

func (v *NullableAPIListItemTermsOfUse) Set(val *APIListItemTermsOfUse) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIListItemTermsOfUse) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIListItemTermsOfUse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIListItemTermsOfUse(val *APIListItemTermsOfUse) *NullableAPIListItemTermsOfUse {
	return &NullableAPIListItemTermsOfUse{value: val, isSet: true}
}

func (v NullableAPIListItemTermsOfUse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIListItemTermsOfUse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


