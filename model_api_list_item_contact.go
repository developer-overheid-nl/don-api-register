/*
Developer Overheid API

API for retrieveing all the API's and repositories on Developer Overheid

API version: dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the APIListItemContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIListItemContact{}

// APIListItemContact struct for APIListItemContact
type APIListItemContact struct {
	Email *string `json:"email,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAPIListItemContact instantiates a new APIListItemContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIListItemContact() *APIListItemContact {
	this := APIListItemContact{}
	return &this
}

// NewAPIListItemContactWithDefaults instantiates a new APIListItemContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIListItemContactWithDefaults() *APIListItemContact {
	this := APIListItemContact{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *APIListItemContact) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemContact) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *APIListItemContact) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *APIListItemContact) SetEmail(v string) {
	o.Email = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *APIListItemContact) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemContact) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *APIListItemContact) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *APIListItemContact) SetPhone(v string) {
	o.Phone = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *APIListItemContact) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemContact) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *APIListItemContact) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *APIListItemContact) SetUrl(v string) {
	o.Url = &v
}

func (o APIListItemContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIListItemContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAPIListItemContact struct {
	value *APIListItemContact
	isSet bool
}

func (v NullableAPIListItemContact) Get() *APIListItemContact {
	return v.value
}

func (v *NullableAPIListItemContact) Set(val *APIListItemContact) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIListItemContact) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIListItemContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIListItemContact(val *APIListItemContact) *NullableAPIListItemContact {
	return &NullableAPIListItemContact{value: val, isSet: true}
}

func (v NullableAPIListItemContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIListItemContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


