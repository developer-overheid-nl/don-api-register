/*
Developer Overheid API

API for retrieveing all the API's and repositories on Developer Overheid

API version: dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the APIListItemEnvironmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIListItemEnvironmentsInner{}

// APIListItemEnvironmentsInner struct for APIListItemEnvironmentsInner
type APIListItemEnvironmentsInner struct {
	Name *string `json:"name,omitempty"`
	ApiUrl *string `json:"api_url,omitempty"`
	SpecificationUrl *string `json:"specification_url,omitempty"`
	DocumentationUrl *string `json:"documentation_url,omitempty"`
}

// NewAPIListItemEnvironmentsInner instantiates a new APIListItemEnvironmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIListItemEnvironmentsInner() *APIListItemEnvironmentsInner {
	this := APIListItemEnvironmentsInner{}
	return &this
}

// NewAPIListItemEnvironmentsInnerWithDefaults instantiates a new APIListItemEnvironmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIListItemEnvironmentsInnerWithDefaults() *APIListItemEnvironmentsInner {
	this := APIListItemEnvironmentsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *APIListItemEnvironmentsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemEnvironmentsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *APIListItemEnvironmentsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *APIListItemEnvironmentsInner) SetName(v string) {
	o.Name = &v
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *APIListItemEnvironmentsInner) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemEnvironmentsInner) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *APIListItemEnvironmentsInner) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *APIListItemEnvironmentsInner) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetSpecificationUrl returns the SpecificationUrl field value if set, zero value otherwise.
func (o *APIListItemEnvironmentsInner) GetSpecificationUrl() string {
	if o == nil || IsNil(o.SpecificationUrl) {
		var ret string
		return ret
	}
	return *o.SpecificationUrl
}

// GetSpecificationUrlOk returns a tuple with the SpecificationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemEnvironmentsInner) GetSpecificationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SpecificationUrl) {
		return nil, false
	}
	return o.SpecificationUrl, true
}

// HasSpecificationUrl returns a boolean if a field has been set.
func (o *APIListItemEnvironmentsInner) HasSpecificationUrl() bool {
	if o != nil && !IsNil(o.SpecificationUrl) {
		return true
	}

	return false
}

// SetSpecificationUrl gets a reference to the given string and assigns it to the SpecificationUrl field.
func (o *APIListItemEnvironmentsInner) SetSpecificationUrl(v string) {
	o.SpecificationUrl = &v
}

// GetDocumentationUrl returns the DocumentationUrl field value if set, zero value otherwise.
func (o *APIListItemEnvironmentsInner) GetDocumentationUrl() string {
	if o == nil || IsNil(o.DocumentationUrl) {
		var ret string
		return ret
	}
	return *o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemEnvironmentsInner) GetDocumentationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentationUrl) {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// HasDocumentationUrl returns a boolean if a field has been set.
func (o *APIListItemEnvironmentsInner) HasDocumentationUrl() bool {
	if o != nil && !IsNil(o.DocumentationUrl) {
		return true
	}

	return false
}

// SetDocumentationUrl gets a reference to the given string and assigns it to the DocumentationUrl field.
func (o *APIListItemEnvironmentsInner) SetDocumentationUrl(v string) {
	o.DocumentationUrl = &v
}

func (o APIListItemEnvironmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIListItemEnvironmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ApiUrl) {
		toSerialize["api_url"] = o.ApiUrl
	}
	if !IsNil(o.SpecificationUrl) {
		toSerialize["specification_url"] = o.SpecificationUrl
	}
	if !IsNil(o.DocumentationUrl) {
		toSerialize["documentation_url"] = o.DocumentationUrl
	}
	return toSerialize, nil
}

type NullableAPIListItemEnvironmentsInner struct {
	value *APIListItemEnvironmentsInner
	isSet bool
}

func (v NullableAPIListItemEnvironmentsInner) Get() *APIListItemEnvironmentsInner {
	return v.value
}

func (v *NullableAPIListItemEnvironmentsInner) Set(val *APIListItemEnvironmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIListItemEnvironmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIListItemEnvironmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIListItemEnvironmentsInner(val *APIListItemEnvironmentsInner) *NullableAPIListItemEnvironmentsInner {
	return &NullableAPIListItemEnvironmentsInner{value: val, isSet: true}
}

func (v NullableAPIListItemEnvironmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIListItemEnvironmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


