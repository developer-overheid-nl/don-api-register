/*
Developer Overheid API

API for retrieveing all the API's and repositories on Developer Overheid

API version: dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the APIListItemOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIListItemOrganization{}

// APIListItemOrganization struct for APIListItemOrganization
type APIListItemOrganization struct {
	// Organisaties overheid ID
	Ooid *int32 `json:"ooid,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewAPIListItemOrganization instantiates a new APIListItemOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIListItemOrganization() *APIListItemOrganization {
	this := APIListItemOrganization{}
	return &this
}

// NewAPIListItemOrganizationWithDefaults instantiates a new APIListItemOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIListItemOrganizationWithDefaults() *APIListItemOrganization {
	this := APIListItemOrganization{}
	return &this
}

// GetOoid returns the Ooid field value if set, zero value otherwise.
func (o *APIListItemOrganization) GetOoid() int32 {
	if o == nil || IsNil(o.Ooid) {
		var ret int32
		return ret
	}
	return *o.Ooid
}

// GetOoidOk returns a tuple with the Ooid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemOrganization) GetOoidOk() (*int32, bool) {
	if o == nil || IsNil(o.Ooid) {
		return nil, false
	}
	return o.Ooid, true
}

// HasOoid returns a boolean if a field has been set.
func (o *APIListItemOrganization) HasOoid() bool {
	if o != nil && !IsNil(o.Ooid) {
		return true
	}

	return false
}

// SetOoid gets a reference to the given int32 and assigns it to the Ooid field.
func (o *APIListItemOrganization) SetOoid(v int32) {
	o.Ooid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *APIListItemOrganization) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIListItemOrganization) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *APIListItemOrganization) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *APIListItemOrganization) SetName(v string) {
	o.Name = &v
}

func (o APIListItemOrganization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIListItemOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ooid) {
		toSerialize["ooid"] = o.Ooid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAPIListItemOrganization struct {
	value *APIListItemOrganization
	isSet bool
}

func (v NullableAPIListItemOrganization) Get() *APIListItemOrganization {
	return v.value
}

func (v *NullableAPIListItemOrganization) Set(val *APIListItemOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIListItemOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIListItemOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIListItemOrganization(val *APIListItemOrganization) *NullableAPIListItemOrganization {
	return &NullableAPIListItemOrganization{value: val, isSet: true}
}

func (v NullableAPIListItemOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIListItemOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


